[{"categories":null,"content":"Allez, il est temps de faire tourner l’application. On en profitera aussi pour jeter un œil au code source ! 🙂","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":" ‎ Pour assurer le bon déroulement de cet article, je t’invite à repartir du projet reprenant les différentes étapes appliquées dans les articles précédents. Pour cela, télécharge le projet si ce n’est pas déjà fait, et ouvre le projet NightClub situé dans le dossier “0 - Get Started”. Pour que notre application puisse fonctionner, il nous reste deux points à aborder : l’initialisation de l’app et surtout, gérer son état d’exécution. ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/:0:0","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":"Initialisation de l’app Pour chaque plateforme ciblée (iOS, Android, …), chaque application .NET MAUI sera initialisée depuis un seul point d’entrée via la méthode CreateMauiApp() située dans le fichier MauiProgram.cs. C’est ici que l’on configurera tout ce dont a besoin l’app pour fonctionner comme on le souhaite : les services Web, les dépendances externes, ou bien encore les polices de caractères spécifiques. ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/:0:1","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":"Gestion de l’état de l’app Mais on aura aussi besoin de quoi définir l’état actuel de notre application (quelle page afficher, que faire si l’application est arrêtée, …). Et pour ça on a justement une classe Application déclarée dans le fichier App.cs. ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/:0:2","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":"Lancement de l’app Allez, il est temps de faire tourner l’application ! Choisis donc la plateforme que tu souhaites cibler, puis clique sur le bouton encadré en rouge pour démarrer le projet: Dans un premier temps, tu verras ton projet être compilé avec la configuration choisie (c’est l’étape du build): Sous Visual Studio for Mac, le statut actuel du projet peut facilement être consulté en bas à gauche de la fenêtre. Puis tu verras ton application se déployer automatiquement vers la plateforme choisie (ici, une simulation de l’iPhone 13, iOS 15.5). Et voilà le résultat ! ‎ 🐒‎ ‎ Héééé mais il ne se passe rien quand je clique sur le bouton ! Ce n’est évidemment que le début de notre app, le plus gros reste à faire ! ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/:0:3","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":"La page d’accueil Ce que tu vois pour le moment, c’est la page d’accueil dont le contenu est spécifié dans le fichier HomeView.cs. Il s’agit là d’une ContentPage (littéralement une page avec du contenu) qui est le type de page le plus courant. Et comme tu peux le voir, ce qu’elle définit est très simple: public HomeView() { BackgroundColor = Colors.Black; Content = new VerticalStackLayout { Children = { NightClubImage, EnterButton } }.CenterVertical(); } C’est une page avec un arrière-plan noir et dont le contenu est défini par une image et un bouton qui sont empilés verticalement dans un VerticalStackLayout. Et si tu veux savoir comment sont définis ces deux composants, il te suffit de regarder un peu plus bas dans le code de la page : #region Controls Image NightClubImage =\u003e new Image { // .NET MAUI converts SVG files to PNG files. Source = \"night_club.png\" }; Button EnterButton =\u003e new Button { Text = \"ENTER\", TextColor = Colors.White, BackgroundColor = Colors.Magenta, CornerRadius = 10 } .Bold() .Paddings(50, 2, 50, 2) .CenterHorizontal(); #endregion ‎ 🐒‎ ‎ D’accord ! Et il ne faudrait pas lui déclarer une action à ce bouton ? Tout juste ! Et on va voir comment déclencher l’exécution de code en cliquant sur ce bouton, mais pas n’importe comment. On va en effet appliquer ce merveilleux patron de conception qu’est le Model-View-ViewModel (MVVM). Plus d’articles dans la même série: Introduction Installer le projet Première exécution du projet ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/3-first-run-of-the-project/:0:4","tags":["Visual Studio","C# markup"],"title":"Première exécution du projet","uri":"/posts/tutos/my-first-app/3-first-run-of-the-project/"},{"categories":null,"content":"Aujourd'hui on attaque la création de notre première application ! Juste le temps d'installer ton environnement de travail et on aura rapidement quelque chose de concret. Allez c'est parti !","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/2-setup-the-project/","tags":["Visual Studio","Setup","New Project"],"title":"Installer le projet","uri":"/posts/tutos/my-first-app/2-setup-the-project/"},{"categories":null,"content":" Salut les Dev•e•s ! 🤓 Tu vas bientôt pouvoir créer ta première application mobile ! Juste le temps d’installer ton environnement de travail et on aura rapidement quelque chose de concret. Allez c’est parti ! ‎ 🐒‎ ‎ Mais au fait, il faut être sous Windows, MacOS ou Linux ? En fait, il n’y a pas de pré-requis particulier pour développer une app avec .NET MAUI, à moins que tu ne traînes un ordinateur de l’avant-guerre et que tu ne mettes rien à jour… 🤔 Sinon, c’est surtout une question de préférence ! Personnellement, je développe sous MacOS car c’est un système que j’affectionne, et le simulateur d’iPhone qui y est intégré est très performant et me permet d’avoir rapidement un rendu de ce que je programme. Mais tu peux tout aussi bien développer sous Windows ou Linux ! Plus concrètement : sous Windows ou MacOS, c’est facile, Microsoft propose un environnement de développement intégré très performant: Visual Studio pour Windows, et Visual Studio for Mac pour… eh bien pour MacOS 😄 et si tu es sous Linux, il te faudra recourir à un peu plus d’ingéniosité (et c’est bien pour cela que tu es sous Linux, n’est-ce pas ? 😛). Dans ce cas-là, je te conseille d’utiliser l’excellent éditeur de code source Visual Studio Code. ‎ Dans le cadre de ce blog, je me concentrerais uniquement sur le développement d’application mobile à l’aide de Visual Studio. En effet, son utilisation est bien plus intuitive et c’est justement cela qui plaît à tout vrai néophyte. Passons maintenant à l’installation de l’environnement de travail: Dans un premier temps, télécharge Visual Studio depuis le site officiel de Microsoft, en choisissant la version appropriée à ton système (Windows ou MacOS), Puis vient le moment d’installer Visual Studio et son environnement de développement .NET MAUI. Pour améliorer la lecture de ce blog, je te propose de directement suivre les étapes d’installation sur le site officiel: suivre les étapes d’installation sous Windows suivre les étapes d’installation sous MacOS Enfin, télécharge le projet depuis GitHub. Pour cela, rends-toi sur le dépôt de code du blog, clique sur le bouton “Code” et télécharge le tout au format .ZIP ‎ Avant d’aller plus loin, si tu es sous MacOS, il te faudra t’assurer d’avoir téléchargé la dernière version d’Xcode qui est requise pour le simulateur d’iPhone. Son installation peut être très longue, aussi, je te conseille de le faire en parallèle de ta lecture. Une fois le fichier téléchargé décompressé, rends-toi dans le dossier des exemples associés à notre cours (Samples/NightClub). Les dossiers qui y sont entreposés correspondent chacun à une partie différente du cours: Pour le moment, ouvre le premier dossier (0 - Get Started) et double-clique sur NightClub.sln pour ouvrir le projet NightClub dans Visual Studio. La structure du projet NightClub après ouverture dans Visual Studio. ‎ 🐒‎ ‎ Ok ! J’ouvre le projet, ça charge… Mais il y a déjà plein de choses dans ce projet, on ne peut pas partir de zéro ? En fait, c’est déjà le cas ! Le projet que tu as sous les yeux est tout neuf, mais il embarque plusieurs fichiers de base nécessaires au bon fonctionnement d’une application .NET MAUI: Toutes les librairies nécessaires au bon fonctionnement du projet sont regroupées dans le dossier Dependencies, Dans Platforms, tu retrouveras tous les fichiers nécessaires à l’exécution de l’application, et ce pour chaque plateforme cible, Quant au dossier Properties, on y retrouve généralement des fichiers de configuration (il y en a d’ailleurs une créée par défaut pour Windows), Et puis, tu auras la possibilité pour chaque application de lui configurer une icône et un écran de chargement ! Pour cela, on recourt généralement au dossier Resources pour stocker tous nos médias (icônes, images, pistes audio et vidéo, …), Enfin, il faudra bien pouvoir afficher quelque chose à l’ouverture de l’app ! Et pour ça, on a le dossier Views qui contient pour le moment notre première page, la fameuse page d’accueil… ‎ Aller plus loin avec ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/2-setup-the-project/:0:0","tags":["Visual Studio","Setup","New Project"],"title":"Installer le projet","uri":"/posts/tutos/my-first-app/2-setup-the-project/"},{"categories":null,"content":"Salut les Dev•e•s ! 🤓 Moi c'est J-E et mon but avec ce blog est d’aider tout développeur débutant à se lancer dans son projet d’application mobile au travers de cours très simples. Pas de cours théoriques à rallonge, ici tu vas vite t’amuser et produire des apps sympas ! Et je t’accompagnerai du développement jusqu’à la mise en ligne de ton application sur les stores.","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/1-introduction/","tags":["New Project"],"title":"Introduction","uri":"/posts/tutos/my-first-app/1-introduction/"},{"categories":null,"content":" Salut les Dev•e•s ! 🤓 Moi c’est J-E, ou Jean-Emmanuel si tu préfères, et je suis ravi de te savoir en train de me lire ! 😊 En effet, j’avais à cœur de partager ma passion pour le développement d’applications mobiles cross-platforms, et tout particulièrement avec .NET MAUI (à prononcer “dote-net maoui”). Avec ce blog, je veux pouvoir aider tout développeur débutant à se lancer dans son projet d’application mobile au travers de cours très simples. Pas de cours théoriques à rallonge, ici tu vas vite t’amuser et produire des apps sympas ! Et je t’accompagnerai du développement jusqu’à la mise en ligne de ton application sur les stores. ‎ 🐒‎ ‎ Mais au fait, c’est quoi .NET MAUI ? Tu peux m’en dire plus ? Il s’agit du framework maintenu par Microsoft pour développer des applications mobiles, mais pas que ! En fait, MAUI signifie : “Multi-platform App User Interface”, ce qui veut littéralement dire “application dotée d’une interface utilisateur et qui peut s’exécuter sur plusieurs plateformes”. .NET MAUI a été officiellement publié courant 2022 et se base sur l’excellent framework Xamarin.Forms qui couvre iOS et Android uniquement. Et si tu n’en avais jamais entendu parler, pas de panique ! Moi-même j’en ai appris l’existence seulement fin 2019, et c’est grâce à lui que j’ai déployé ma toute première application sur les stores: MyVanity. ‎ 🐒‎ ‎ Et comment as-tu fait pour publier ta première application ? Ça t’a pris longtemps ? Et c’est là toute la magie de .NET MAUI, tu n’as qu’à coder un seul programme pour qu’il fonctionne sur Android, iOS, macOS et Windows ! Et tout ça bien-sûr avec un seul langage de programmation. Et donc non, cela ne m’a pas pris très longtemps, mais cela dépendra surtout: de tes connaissances en développement, de la complexité de ton application, et du temps que tu peux lui accorder. Dans mon cas, cela m’a pris exactement un an entre le moment où j’ai imaginé l’application et le jour où je l’ai publiée sur les stores. ‎ 🐒‎ ‎ D’accord, alors qu’est-ce que je dois savoir avant de débuter mon application ? Tout d’abord bravo, tu as raison de te lancer ! Alors pour démarrer ton application, il te faudra : Trouver une idée, Concevoir la maquette, Comprendre le langage C#. Pour le premier point, c’est facile, tu l’as normalement déjà fait pour arriver jusqu’ici. 😛 Le deuxième, c’est simplement pour avoir une idée précise de ce à quoi ton application ressemblera, et pour ça, tu peux utiliser le très bon Adobe XD qui est gratuit ! Enfin pour finir, il te faudra connaître le langage C# pour programmer ton application, et pour cela je te propose le parcours d’apprentissage élaboré par Microsoft. Cela dit, si tu as déjà codé dans ta vie, alors tu peux te lancer même sans connaître le C# ! Tu apprendras très vite en voulant développer ton application. Pour ce premier cours, je te propose de développer une application pour lire des titres musicaux dans une ambiance “boîte de nuit”. 💃🏾🕺🏻🪩 Tu feras sûrement quelques erreurs, mais se tromper est justement la meilleure façon d’apprendre, alors surtout: va jusqu’au bout de ton idée ! ‎ 🐒‎ ‎ J’ai l’idée en tête, mon design est prêt, et coder en C# ne me fait pas peur, on attaque ? Allez c’est parti, rendez-vous au prochain article ! Plus d’articles dans la même série: Introduction Installer le projet Première exécution du projet ","date":"01/01/2023","objectID":"/posts/tutos/my-first-app/1-introduction/:0:0","tags":["New Project"],"title":"Introduction","uri":"/posts/tutos/my-first-app/1-introduction/"}]